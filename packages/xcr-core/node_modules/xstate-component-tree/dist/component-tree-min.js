/*! xstate-component-tree@3.0.0 !*/
"use strict";const loadComponent=async({item:t,load:e,context:n,event:s})=>{const i=await e(n,s);if(Array.isArray(i)){const[e,n]=await Promise.all(i);t.component=e,t.props=n}else t.component=i},loadChild=async({child:t,root:e})=>{const{_tree:n}=t,s=await n;e.children.push(...s)};class ComponentTree{constructor(t,e,{cache:n=!0}=!1){this._interpreter=t,this._callback=e,this._caching=n,this.id=t.id,this._counter=0,this._cache=new Map,this._paths=new Map,this._invocables=new Map,this._children=new Map,this._tree=!1,this._data=!1,this._prep(),this._watch()}teardown(){this._paths.clear(),this._invocables.clear(),this._children.clear(),this._cache.clear(),this._tree=null,this._data=null,this.options=null,this._unsubscribe()}_prep(){const{_paths:t,_invocables:e,_interpreter:n,_caching:s}=this,{idMap:i}=n.machine;for(const n in i){const{path:o,meta:c=!1,invoke:a}=i[n],r=o.join(".");c&&t.set(r,{__proto__:null,cache:s,...c}),a.forEach(({id:t})=>e.set(r,t))}}_watch(){const{_interpreter:t}=this,{unsubscribe:e}=t.subscribe(t=>this._state(t));this._unsubscribe=e}async _walk(){const{_paths:t,_invocables:e,_children:n,_cache:s,_counter:i,_data:{value:o,context:c,event:a}}=this,r=[],h={__proto__:null,id:this.id,children:[]};let l;for(l="string"==typeof o?[[h,o,!1]]:Object.keys(o).map(t=>[h,t,o[t]]);l.length&&i===this._counter;){const[i,o,h]=l.shift();let _=i;if(t.has(o)){const e=t.get(o);let n=!1;s.has(o)&&(n=s.get(o),n.counter===this._counter-1?n.counter=this._counter:(n=!1,s.delete(o)));const{component:h=!1,props:l=!1,load:p}=e,d={__proto__:null,component:n?n.item.component:h,props:n?n.item.props:l,children:[]};if(p&&!n.loaded){const t=loadComponent({item:d,load:p,context:c,event:a});t.then(()=>{const t=s.get(o);t&&(t.loaded=!0)}),r.push(t)}e.cache&&!n&&s.set(o,{__proto__:null,item:d,counter:this._counter,loaded:!1}),i.children.push(d),_=d}if(e.has(o)){const t=e.get(o);n.has(t)&&r.push(loadChild({child:n.get(t),root:_}))}h&&("string"!=typeof h?l.push(...Object.keys(h).map(t=>[_,`${o}.${t}`,h[t]])):l.push([_,`${o}.${h}`,!1]))}return await Promise.all(r),h.children}async _run(){const{_children:t,_callback:e}=this,n=++this._counter;this._tree=this._walk();const[s]=await Promise.all([this._tree,[...t.values()].map(({_tree:t})=>t)]);n===this._counter&&e(s,{data:this._data})}_state(t){const{changed:e,children:n}=t;if(!1===e)return!1;this._data={__proto__:null,value:t.value,event:t.event,context:t.context};const{_children:s}=this;return s.forEach((t,e)=>{e in n||(t.teardown(),t=null,s.delete(e))}),Object.keys(n).forEach(t=>{if(s.has(t))return;const e=n[t];e.initialized&&e.state&&s.set(t,new ComponentTree(e,()=>this._run()))}),this._run()}}module.exports=ComponentTree;
//# sourceMappingURL=component-tree-min.js.map
